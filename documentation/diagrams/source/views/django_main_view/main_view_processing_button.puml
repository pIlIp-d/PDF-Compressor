@startuml
title Processing Button

box Client #f5f5f5
    actor Browser
    entity DOM #red
    entity DestinationTypeSelect #purple
    entity ProcessingButton #green
end box
box Server #pink
    participant Django
    participant Plugin
    database DB
end box
box Server-TaskScheduler
    participant Task
end box


group ProcessingButton.update()
-[#green]> ProcessingButton
    activate ProcessingButton
        alt if not select.isEmpty && select.value != 'null' && dropzone.queueFinished && dropzone_files.length > 0
            ProcessingButton -> ProcessingButton: activate()
            ProcessingButton -> Browser: activate ProcessingButton
        else
            ProcessingButton -> ProcessingButton: deactivate()
            ProcessingButton -> Browser: deactivate ProcessingButton
        end
    deactivate ProcessingButton
end
group ProcessingButton.submit()
-[#green]> ProcessingButton: clicked Button
activate ProcessingButton
ProcessingButton -> DOM: compression_options_form.submit()
deactivate ProcessingButton
activate DOM
DOM -> Django: start_processing_and_show_download_view
deactivate DOM
activate Django
    Django -> DB: get ProcessingFilesRequest
    activate DB
        DB --> Django
    deactivate DB
    Django -> Plugin: get_processing_plugin_by_name()
    activate Plugin
        Plugin --> Django
    deactivate Plugin
    Django -> DB: get list of UploadedFiles
    activate DB
        DB --> Django
    deactivate DB
    Django -> Plugin: get_task()
    activate Plugin
        Plugin --> Django
    deactivate Plugin
    Django -> Task: Task.create()
    deactivate Django
    activate Task
        Task -> DB: add Task
        activate DB
            DB --> Task: task_id
        deactivate DB
        note over Task: save task_id
        Task --> Django
    deactivate Task
    activate Django
    Django ->o Browser: redirect("download/")
deactivate Django
end

@enduml